version: '3.8'

services:
  portfolio:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cybersecurity-portfolio
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    env_file:
      - .env.local
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - portfolio-network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: cybersecurity-portfolio-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - portfolio
    restart: unless-stopped
    networks:
      - portfolio-network
    profiles:
      - nginx

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    container_name: cybersecurity-portfolio-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - portfolio-network
    profiles:
      - redis

  # Optional: PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: cybersecurity-portfolio-postgres
    environment:
      - POSTGRES_DB=portfolio
      - POSTGRES_USER=portfolio_user
      - POSTGRES_PASSWORD=secure_password_change_me
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - portfolio-network
    profiles:
      - postgres

volumes:
  redis_data:
  postgres_data:
  nginx_logs:

networks:
  portfolio-network:
    driver: bridge